% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group.R
\name{group}
\alias{group}
\alias{group_by}
\alias{split}
\alias{window}
\title{Create groups / windows from your data.}
\usage{
group(data, n, method = "n_dist", force_equal = FALSE, allow_zero = FALSE,
  return_factor = FALSE, descending = FALSE, randomize = FALSE,
  col_name = ".groups")
}
\arguments{
\item{data}{Dataframe or Vector}

\item{n}{Number of groups, group size, or step size
(depending on chosen method)
Given as whole numbers or percentage (\code{0} < n < \code{1}).}

\item{method}{\code{greedy, n_dist, n_fill, n_last, n_rand, or staircase}

 \code{greedy} divides up the data greedily given a specified group size
 \eqn{(e.g. 10, 10, 10, 10, 10, 7)}

 \code{n_dist} divides up the data into a specified number of groups and
 distributes excess data points across groups
 \eqn{(e.g. 11, 11, 12, 11, 12)}

 \code{n_fill} divides up the data into a specified number of groups and
 fills up groups with excess data points from the beginning
 \eqn{(e.g. 12, 12, 11, 11, 11)}

 \code{n_last} divides up the data into a specified number of groups.
 The algorithm finds the most equal group sizes possible,
 using all data points. Only the last group is able to differ in size
 \eqn{(e.g. 11, 11, 11, 11, 13)}

 \code{n_rand} divides up the data into a specified number of groups.
 Excess data points are placed randomly in groups (only 1 per group)
 \eqn{(e.g. 12, 11, 11, 11, 12)}

 \code{staircase} uses step_size to divide up the data.
 Group size increases with 1 step for every group,
 until there is no more data
 \eqn{(e.g. 5, 10, 15, 20, 7)}}

\item{force_equal}{Create equal groups by discarding excess data points.
Implementation varies between methods. (Logical)}

\item{allow_zero}{Whether n can be passed as \code{0}. (Logical)}

\item{return_factor}{Return only grouping factor (Logical)}

\item{descending}{Change direction of method. (Not fully implemented)
(Logical)}

\item{randomize}{Randomize the grouping factor (Logical)}

\item{col_name}{Name of added grouping factor}
}
\value{
Dataframe grouped by new grouping factor
}
\description{
Divides up data into groups / windows by a range of methods.
 Creates a grouping factor with 1s for group 1, 2s for group 2, etc.
 Groups data by the grouping factor for easy use in dplyr pipelines.
}
\examples{
# Coming soon
}
\seealso{
Other grouping functions: \code{\link{fold}},
  \code{\link{group_factor}}, \code{\link{splt}}
}

